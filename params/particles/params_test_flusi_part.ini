; Define the resolution
[Resolution]
nx=10;
ny=256;
nz=50;

[Time]
; final time
Tmax=10;
; maximum number of time steps. if not set, unlimited
nt=;
; Time stepper for Fluid
iTimeMethodFluid=AB2; RK2, RK4, FSI_AB2_iteration, FSI_AB2_staggered, FSI_AB2_semiimplicit
CFL=0.1;
dt_fixed=1d-3;

[ReynoldsNumber]
nu=1.0e-2; nu is the inverse of Re if properly scaled

[InitialCondition]
inicond=orszag;
;inicond=taylor_green_2d;
nu_smoothing=1.0e-5;
omega1=200.0;

[Penalization]
; use penalization method or not? (superseeds following parameters)
iPenalization=0;
; does the obstacle move?
iMoving=1;
; which mask to set? (sphere, Flapper, Insect, noncircular_cylinder)
; note noncircular_cylinder reads in shape.in
iMask=sphere;
; penalization parameter
eps=1.0e-3;

[Geometry]
; domain size
;xl=3.0; new: default value is 2*pi
;yl=3.0;
;zl=3.0;
Size=1.0; generic size parameter
alpha=0.0; generic angle parameter
; Position of obstacle (not used for insects)
x0=2.0;
y0=2.0;
z0=2.0;

[MeanFlow]
;iMeanFlow_x=fixed;
;iMeanFlow_y=fixed;
;iMeanFlow_z=fixed;
;ux=0.0;
;uy=0.0;
;uz=0.0;

[Saving]
; Time interval for saving fields
tsave=10.0;
; Time interval for saving integral quantities
tintegral=0.01;
; Save drag every itdrag time steps
itdrag=10;
; save beam (if in use) every itbeam time steps
itbeam=2;
; make a backup or dont
iDoBackup=1;
; what fields to save?
iSaveVelocity=1;
iSaveMask=1;
iSaveAcc=1; save Lagrangian Acceleration

[Lagrangian]
use_lagrangian=1; 0=off, 1=on
; reclc is the number of bytes for I/O access direct
reclc=32; reclc=32 for gfortran and reclc=16 for intel
;
npart=10; total number of particles
nper_part=400; number of particles allowed by proc in percentage: +nper_part% of npart/nproc
; interpolation method
lagr_interp=linear; linear or delta
; Choice of Lagrangian quatities to compute
ilagr_acc=1; Lagrangian acceleration
ilagr_vort=1; Lagrangian vorticity
itraj_test=1; itraj_test=1 -> save the first particle in ascci file 'traj_test'
; Initial positions for particles ("test", "random", "random_proc", "infile"')
; to retake a backup: "backup::PARTICLE_RESTART0"
;inicond_lagrangian=random; only for one proc then read file with infile
inicond_lagrangian=infile;
; Time interval for saving particle fields
tsave_part=0.0025d0;

